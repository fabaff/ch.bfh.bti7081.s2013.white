package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController;
import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentListener;
import ch.bfh.ti.soed.white.mhc_pms.data.ContainerCollection;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.security.PmsPermission;
import ch.bfh.ti.soed.white.mhc_pms.security.PmsPermission.Element;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;

/**
 * @author		Gruppe White, I2p, BFH Bern, <a href="https://github.com/fabaff/ch.bfh.bti7081.s2013.white">Contact</a>
 * @version		0.0.2 
 * @since		0.0.1
 * 
 * UI Class for treatment progress
 */
class PatientProgressComponent extends PmsComponentController implements PmsComponentListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnDeletePatientProgressEntry;
	@AutoGenerated
	private Button btnEditPatientProgressEntry;
	@AutoGenerated
	private Button btnNewPatientProgressEntry;
	private static final long serialVersionUID = 1022303185979278516L;
	
	private ContainerCollection pmsContainers;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PatientProgressComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.pmsContainers = PmsDataAccess.getContainers();
		
		PmsPermission permission = new PmsPermission(this.pmsContainers.getCurrentUser().getUserGroup());
		this.btnNewPatientProgressEntry.setEnabled(permission.hasPermission(Element.NEW_PATIENT_PROGRESS_ENTRY));
		this.btnEditPatientProgressEntry.setEnabled(permission.hasPermission(Element.EDIT_PATIENT_PROGRESS_ENTRY));
		this.btnDeletePatientProgressEntry.setEnabled(permission.hasPermission(Element.DELETE_PATIENT_PROGRESS_ENTRY));
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// btnNewPatientProgressEntry
		btnNewPatientProgressEntry = new Button();
		btnNewPatientProgressEntry.setCaption("Neuer Eintrag");
		btnNewPatientProgressEntry.setImmediate(true);
		btnNewPatientProgressEntry.setWidth("100px");
		btnNewPatientProgressEntry.setHeight("-1px");
		mainLayout.addComponent(btnNewPatientProgressEntry,
				"top:20.0px;left:20.0px;");
		
		// btnEditPatientProgressEntry
		btnEditPatientProgressEntry = new Button();
		btnEditPatientProgressEntry.setCaption("Eintrag bearbeiten");
		btnEditPatientProgressEntry.setImmediate(true);
		btnEditPatientProgressEntry.setWidth("140px");
		btnEditPatientProgressEntry.setHeight("-1px");
		mainLayout.addComponent(btnEditPatientProgressEntry,
				"top:20.0px;left:140.0px;");
		
		// btnDeletePatientProgressEntry
		btnDeletePatientProgressEntry = new Button();
		btnDeletePatientProgressEntry.setCaption("Eintrag LÃ¶schen");
		btnDeletePatientProgressEntry.setImmediate(true);
		btnDeletePatientProgressEntry.setWidth("-1px");
		btnDeletePatientProgressEntry.setHeight("-1px");
		mainLayout.addComponent(btnDeletePatientProgressEntry,
				"top:20.0px;left:300.0px;");
		
		return mainLayout;
	}

	@Override
	public void pCaseItemChange(Object itemId) {
		// TODO implement
	}

}
