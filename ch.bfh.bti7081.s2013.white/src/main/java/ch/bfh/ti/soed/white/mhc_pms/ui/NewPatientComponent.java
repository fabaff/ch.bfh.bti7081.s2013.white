package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.data.MhcPmsContainer;
import ch.bfh.ti.soed.white.mhc_pms.data.MhcPmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.data.MhcPmsItem;
import ch.bfh.ti.soed.white.mhc_pms.data.Patient;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

public class NewPatientComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField txtNationality;
	@AutoGenerated
	private TextField txtCivilStatus;
	@AutoGenerated
	private TextField txtFirstName;
	@AutoGenerated
	private ComboBox cmbKindOfTreatment;
	@AutoGenerated
	private ComboBox cmbGender;
	@AutoGenerated
	private PopupDateField dateFieldDateOfBirth;
	@AutoGenerated
	private TextField txtLastName;
	@AutoGenerated
	private TextField txtMotherLanguage;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnAddPatient;
	private static final long serialVersionUID = 611645331656829049L;

	private ImhcPmsComponent mainComponent;

	//private BeanItem<Patient> newPatientItem;
	private Patient newPatient;

	private FieldGroup fieldGroup;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public NewPatientComponent(ImhcPmsComponent mainComponent) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.mainComponent = mainComponent;

		// TODO saubere Implementierung
//		this.newPatientItem = new BeanItem<Patient>(new Patient());
//		fieldGroup = new FieldGroup(this.newPatientItem);
//		fieldGroup.bind(this.txtFirstName, "firstName");
//		fieldGroup.bind(this.txtLastName, "lastName");
//		fieldGroup.bind(this.txtCivilStatus, "civilStatus");
//		fieldGroup.bind(this.txtMotherLanguage, "motherLanguage");
//		fieldGroup.bind(this.txtNationality, "nationality");
//		fieldGroup.bind(this.cmbGender, "gender");
//		fieldGroup.bind(this.cmbKindOfTreatment, "kindOfTreatment");
//		fieldGroup.bind(this.dateFieldDateOfBirth, "dateOfBirth");
		
		this.newPatient = new Patient();

		this.btnAddPatient.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Cast vermeiden
				MhcPmsContainer<? extends MhcPmsItem> cont = MhcPmsDataAccess.getInstance().getCurrentContainer(Patient.class);
				if (cont != null && cont.getCurrentItem() instanceof Patient) {
					MhcPmsContainer<Patient> container = (MhcPmsContainer<Patient>) cont;
					
					newPatient.setFirstName(txtFirstName.getValue());
					newPatient.setLastName(txtLastName.getValue());
					newPatient.setCivilStatus(txtCivilStatus.getValue());
					newPatient.setDateOfBirth(dateFieldDateOfBirth.getValue());
					newPatient.setGender(cmbGender.getValue().toString());
					newPatient.setKindOfTreatment(cmbKindOfTreatment.getValue().toString());
					newPatient.setMotherLanguage(txtMotherLanguage.getValue());
					newPatient.setNationality(txtNationality.getValue());
					container.addEntity(newPatient);
					container.commit();
					
					//container.addEntity(newPatientItem.getBean());
					NewPatientComponent.this.mainComponent
							.updateComponentDataSource();
//					newPatientItem = new BeanItem<Patient>(new Patient());
					newPatient = new Patient();
				}
				NewPatientComponent.this.restoreUI();
				NewPatientComponent.this.mainComponent
						.updateComponentDataSource();
			}
		});

		this.btnCancel.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				NewPatientComponent.this.restoreUI();
			}
		});

		// TODO Combobox Values aus Container
		this.cmbGender.addItem("weiblich");
		this.cmbGender.addItem("männlich");
		this.cmbGender.setValue("weiblich");
		this.cmbKindOfTreatment.addItem("ambulant");
		this.cmbKindOfTreatment.addItem("teilstationär");
		this.cmbKindOfTreatment.addItem("stationär");
		this.cmbKindOfTreatment.setValue("stationär");

	}

	private void restoreUI() {
		Component title = this.mainComponent.getTitleBarComponent();
		Component detail = this.mainComponent.getPatientInfoComponent();
		this.mainComponent.setActiveComponents(title, detail);
		this.mainComponent.enableMenuBar(true);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// btnAddPatient
		btnAddPatient = new Button();
		btnAddPatient.setCaption("Patient hinzufügen");
		btnAddPatient.setImmediate(true);
		btnAddPatient.setWidth("-1px");
		btnAddPatient.setHeight("-1px");
		mainLayout.addComponent(btnAddPatient, "top:220.0px;left:80.0px;");
		
		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Abbrechen");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("-1px");
		btnCancel.setHeight("-1px");
		mainLayout.addComponent(btnCancel, "top:220.0px;left:240.0px;");
		
		// txtMotherLanguage
		txtMotherLanguage = new TextField();
		txtMotherLanguage.setCaption("Muttersprache");
		txtMotherLanguage.setImmediate(false);
		txtMotherLanguage.setWidth("160px");
		txtMotherLanguage.setHeight("-1px");
		mainLayout.addComponent(txtMotherLanguage, "top:160.0px;left:20.0px;");
		
		// txtLastName
		txtLastName = new TextField();
		txtLastName.setCaption("Nachname");
		txtLastName.setImmediate(false);
		txtLastName.setWidth("160px");
		txtLastName.setHeight("-1px");
		mainLayout.addComponent(txtLastName, "top:40.0px;left:220.0px;");
		
		// dateFieldDateOfBirth
		dateFieldDateOfBirth = new PopupDateField();
		dateFieldDateOfBirth.setCaption("Geburtsdatum");
		dateFieldDateOfBirth.setImmediate(false);
		dateFieldDateOfBirth.setWidth("-1px");
		dateFieldDateOfBirth.setHeight("-1px");
		mainLayout.addComponent(dateFieldDateOfBirth,
				"top:100.0px;left:20.0px;");
		
		// cmbGender
		cmbGender = new ComboBox();
		cmbGender.setCaption("Geschlecht");
		cmbGender.setImmediate(false);
		cmbGender.setWidth("-1px");
		cmbGender.setHeight("-1px");
		mainLayout.addComponent(cmbGender, "top:40.0px;left:420.0px;");
		
		// cmbKindOfTreatment
		cmbKindOfTreatment = new ComboBox();
		cmbKindOfTreatment.setCaption("Behandlungsart");
		cmbKindOfTreatment.setImmediate(false);
		cmbKindOfTreatment.setWidth("-1px");
		cmbKindOfTreatment.setHeight("-1px");
		mainLayout
				.addComponent(cmbKindOfTreatment, "top:100.0px;left:220.0px;");
		
		// txtFirstName
		txtFirstName = new TextField();
		txtFirstName.setCaption("Vorname");
		txtFirstName.setImmediate(false);
		txtFirstName.setWidth("160px");
		txtFirstName.setHeight("-1px");
		mainLayout.addComponent(txtFirstName, "top:40.0px;left:20.0px;");
		
		// txtCivilStatus
		txtCivilStatus = new TextField();
		txtCivilStatus.setCaption("Zivilstand");
		txtCivilStatus.setImmediate(false);
		txtCivilStatus.setWidth("160px");
		txtCivilStatus.setHeight("-1px");
		mainLayout.addComponent(txtCivilStatus, "top:160.0px;left:220.0px;");
		
		// txtNationality
		txtNationality = new TextField();
		txtNationality.setCaption("Nationalität");
		txtNationality.setImmediate(false);
		txtNationality.setWidth("160px");
		txtNationality.setHeight("-1px");
		mainLayout.addComponent(txtNationality, "top:160.0px;left:420.0px;");
		
		return mainLayout;
	}

}
