package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController;
import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentListener;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccessCreator;
import ch.bfh.ti.soed.white.mhc_pms.security.PmsPermission;
import ch.bfh.ti.soed.white.mhc_pms.security.PmsPermission.Element;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Table;
import com.vaadin.ui.Button.ClickEvent;

/**
 * @author Gruppe White, I2p, BFH Bern, <a
 *         href="https://github.com/fabaff/ch.bfh.bti7081.s2013.white"
 *         >Contact</a>
 * @version 0.0.2
 * @since 0.0.1
 * 
 *        UI Class for diagnosis
 */
class DiagnosisComponent extends PmsComponentController implements
		PmsComponentListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnToggleDiagnosisView;
	@AutoGenerated
	private Table tblDiagnosis;
	@AutoGenerated
	private Button btnDeleteDiagnosis;
	@AutoGenerated
	private Button btnEditDiagnosis;
	@AutoGenerated
	private Button btnNewDiagnosis;
	private static final long serialVersionUID = -8871345981941787383L;

	private static final String[] VISIBLE_COLUMNS = { "diagnosisName", "icdCode",
			"dateOfCreation", "diagnosisCreator", "clinicName" };

	private static final String[] VISIBLE_COLUMN_NAMES = { "Diagnose",
			"ICD Code", "Erstellungsdatum", "Ersteller", "Institution" };

	private PmsDataAccess pmsContainers;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public DiagnosisComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.pmsContainers = PmsDataAccessCreator.getContainers();
		this.pmsContainers.getDiagnosisContainer().refresh();
		Object pCaseItemId = this.pmsContainers.getPCaseContainer().getCurrentPCaseId();
		
		this.setPermissions();
		this.initPatientTable();
		this.addToggleDiagnosisViewButtonListener();
		this.pCaseItemChange(pCaseItemId);
	}

	private void addToggleDiagnosisViewButtonListener() {
		this.btnToggleDiagnosisView.addClickListener(new Button.ClickListener() {
			
			private static final long serialVersionUID = 698075244564468624L;

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO to implement
				
			}
		});
	}

	private void initPatientTable() {
		this.tblDiagnosis.setContainerDataSource(this.pmsContainers.getDiagnosisContainer());
		this.tblDiagnosis.setSelectable(true);
		this.tblDiagnosis.setImmediate(true);
		//this.tblPatients.setEditable(true);
		this.tblDiagnosis.setVisibleColumns(VISIBLE_COLUMNS);
		for (int i = 0; i < VISIBLE_COLUMNS.length; i++) {
			this.tblDiagnosis.setColumnHeader(VISIBLE_COLUMNS[i], VISIBLE_COLUMN_NAMES[i]);
		}
	}

	private void setPermissions() {
		PmsPermission permission = new PmsPermission(this.pmsContainers
				.getCurrentUser().getUserGroup());
		this.btnNewDiagnosis.setEnabled(permission
				.hasPermission(Element.NEW_DIAGNOSIS));
		this.btnEditDiagnosis.setEnabled(permission
				.hasPermission(Element.EDIT_DIAGNOSIS));
		this.btnDeleteDiagnosis.setEnabled(permission
				.hasPermission(Element.DELETE_DIAGNOSIS));
	}

	@Override
	public void pCaseItemChange(Object pCaseItemId) {
		this.pmsContainers.getDiagnosisContainer().setPCaseFilter(pCaseItemId);
		Object diagnosisItemId = this.pmsContainers.getDiagnosisContainer().firstItemId();
		
		if (diagnosisItemId != null) {
			this.tblDiagnosis.select(diagnosisItemId);
		}
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// btnNewDiagnosis
		btnNewDiagnosis = new Button();
		btnNewDiagnosis.setCaption("Neue Diagnose");
		btnNewDiagnosis.setImmediate(true);
		btnNewDiagnosis.setWidth("120px");
		btnNewDiagnosis.setHeight("-1px");
		mainLayout.addComponent(btnNewDiagnosis, "top:20.0px;left:20.0px;");
		
		// btnEditDiagnosis
		btnEditDiagnosis = new Button();
		btnEditDiagnosis.setCaption("Diagnose bearbeiten");
		btnEditDiagnosis.setImmediate(true);
		btnEditDiagnosis.setWidth("140px");
		btnEditDiagnosis.setHeight("-1px");
		mainLayout.addComponent(btnEditDiagnosis, "top:20.0px;left:160.0px;");
		
		// btnDeleteDiagnosis
		btnDeleteDiagnosis = new Button();
		btnDeleteDiagnosis.setCaption("Diagnose löschen");
		btnDeleteDiagnosis.setImmediate(true);
		btnDeleteDiagnosis.setWidth("-1px");
		btnDeleteDiagnosis.setHeight("-1px");
		mainLayout.addComponent(btnDeleteDiagnosis, "top:20.0px;left:320.0px;");
		
		// tblDiagnosis
		tblDiagnosis = new Table();
		tblDiagnosis.setCaption("Übersicht Diagnosen");
		tblDiagnosis.setImmediate(false);
		tblDiagnosis.setWidth("100.0%");
		tblDiagnosis.setHeight("100.0%");
		mainLayout.addComponent(tblDiagnosis,
				"top:100.0px;right:20.0px;bottom:40.0px;left:20.0px;");
		
		// btnToggleDiagnosisView
		btnToggleDiagnosisView = new Button();
		btnToggleDiagnosisView.setCaption("Detailansicht");
		btnToggleDiagnosisView.setImmediate(true);
		btnToggleDiagnosisView.setWidth("-1px");
		btnToggleDiagnosisView.setHeight("-1px");
		mainLayout.addComponent(btnToggleDiagnosisView,
				"top:20.0px;left:480.0px;");
		
		return mainLayout;
	}

}
