package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.controller.NavigationEvent;
import ch.bfh.ti.soed.white.mhc_pms.controller.NewItemListener;
import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController;
import ch.bfh.ti.soed.white.mhc_pms.data.Diagnosis;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccessCreator;
import ch.bfh.ti.soed.white.mhc_pms.data.UnknownUserException;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.util.BeanItem;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Window;

/**
 * UI class for editing diagnosis
 * 
 * @author Group White, I2p, BFH Berne, <a href="https://github.com/fabaff/ch.bfh.bti7081.s2013.white">Contact</a>
 * @version 1.0.0
 */
public class EditDiagnosisComponent extends PmsComponentController implements
		NewItemListener {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextArea tarDiagnosisComment;
	@AutoGenerated
	private TextField txtIcdCode;
	@AutoGenerated
	private TextField txtDiagnosisName;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnSave;
	@AutoGenerated
	private Label lblTitle;

	private class SaveDiagnosisButtonListener implements Button.ClickListener {
		private static final long serialVersionUID = 7137875461203747513L;

		@Override
		public void buttonClick(ClickEvent event) {
			// try {
			// EditDiagnosisComponent.this.fieldGroup.commit();
			// Diagnosis diagItem = EditDiagnosisComponent.this.diagnosisItem
			// .getBean();
			// EditDiagnosisComponent.this.pmsDataAccess
			// .getDiagnosisContainer().addEntity(diagItem);
			//
			// // TODO define helper methods
			// if (EditDiagnosisComponent.this.isNewDiagnosis) {
			// EditDiagnosisComponent.this.diagnosisItem = new
			// BeanItem<Diagnosis>(new Diagnosis(
			// EditDiagnosisComponent.this.pmsDataAccess.getPCaseContainer().getCurrentItem()));
			// }
			//
			// EditDiagnosisComponent.this.fireUIActivationEvent(true);
			// EditDiagnosisComponent.this
			// .fireComponentChangeEvent(NavigationEvent.DIAGNOSIS_BACK);
			// EditDiagnosisComponent.this.setNewItem(false);
			//
			// // TODO adjusted text: new /edit
			// Notification.show("Neue Diagnose gespeichert",
			// Notification.Type.HUMANIZED_MESSAGE);
			// } catch (CommitException e) {
			// // TODO Exception Handling
			// EditDiagnosisComponent.this
			// .getUI()
			// .addWindow(
			// new Window(
			// "Beim Speichern der Diagnose ist ein Fehler aufgetreten!"));
			// }
		}

	}

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1756507024961174367L;

	// Static UI elements
	private String TITLE_NEW_DIAGNOSIS = "Neue Diagnose";
	private String TITLE_EDIT_DIAGNOSIS = "Diagnose bearbeiten";

	private BeanFieldGroup<Diagnosis> fieldGroup;

	private boolean isNewDiagnosis;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public EditDiagnosisComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.fieldGroup = new BeanFieldGroup<Diagnosis>(Diagnosis.class);
		this.setNewItem(false);

		this.btnSave.addClickListener(new SaveDiagnosisButtonListener());
		this.addBtnCancelListener();
	}

	private void bindFields() {
		// Diagnosis item = this.pmsDataAccess.getDiagnosisContainer()
		// .getCurrentItem();
		//
		// if (item != null) {
		// this.diagnosisItem = new BeanItem<Diagnosis>(item);
		// } else {
		// this.diagnosisItem = new BeanItem<Diagnosis>(new Diagnosis(
		// this.pmsDataAccess.getPCaseContainer().getCurrentItem()));
		// }
		//
		// this.fieldGroup.setItemDataSource(this.diagnosisItem);
		// this.fieldGroup.bind(this.txtDiagnosisName, "diagnosisName");
		// this.fieldGroup.bind(this.txtIcdCode, "icdCode");
		// this.fieldGroup.bind(this.tarDiagnosisComment, "diagnosisComment");
	}

	private void addBtnCancelListener() {
		this.btnCancel.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				EditDiagnosisComponent.this.fieldGroup.discard();
				EditDiagnosisComponent.this.fireUIActivationEvent(true);
				EditDiagnosisComponent.this
						.fireComponentChangeEvent(NavigationEvent.DIAGNOSIS_BACK);
				EditDiagnosisComponent.this.setNewItem(false);
			}
		});

	}

	@Override
	public void setNewItem(boolean value) {
		this.isNewDiagnosis = value;
		this.lblTitle.setValue(value ? TITLE_NEW_DIAGNOSIS
				: TITLE_EDIT_DIAGNOSIS);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController#enter(
	 * com.vaadin.navigator.ViewChangeListener.ViewChangeEvent)
	 */
	@Override
	public void enter(ViewChangeEvent event) {
		try {
			PmsDataAccessCreator.getDataAccess().getDiagnosisContainer()
					.refresh();
		} catch (UnknownUserException e) {
			Notification.show(e.getInvalidUserMessage(),
					Notification.Type.HUMANIZED_MESSAGE);
		}

		// TODO implement
		// this.fieldGroup.setItemDataSource(EditDiagnosisComponent.this.diagnosisItem);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// lblTitle
		lblTitle = new Label();
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Neue Diagnose");
		mainLayout.addComponent(lblTitle, "top:20.0px;left:20.0px;");

		// btnSave
		btnSave = new Button();
		btnSave.setCaption("Speichern");
		btnSave.setImmediate(true);
		btnSave.setWidth("100px");
		btnSave.setHeight("-1px");
		mainLayout.addComponent(btnSave, "top:20.0px;left:300.0px;");

		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Abbrechen");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("100px");
		btnCancel.setHeight("-1px");
		mainLayout.addComponent(btnCancel, "top:20.0px;left:420.0px;");

		// txtDiagnosisName
		txtDiagnosisName = new TextField();
		txtDiagnosisName.setCaption("Name der Diagnose");
		txtDiagnosisName.setImmediate(false);
		txtDiagnosisName.setWidth("320px");
		txtDiagnosisName.setHeight("-1px");
		mainLayout.addComponent(txtDiagnosisName, "top:80.0px;left:20.0px;");

		// txtIcdCode
		txtIcdCode = new TextField();
		txtIcdCode.setCaption("ICD Kode");
		txtIcdCode.setImmediate(false);
		txtIcdCode.setWidth("-1px");
		txtIcdCode.setHeight("-1px");
		mainLayout.addComponent(txtIcdCode, "top:80.0px;left:380.0px;");

		// tarDiagnosisComment
		tarDiagnosisComment = new TextArea();
		tarDiagnosisComment.setCaption("Kommentar");
		tarDiagnosisComment.setImmediate(false);
		tarDiagnosisComment.setWidth("500px");
		tarDiagnosisComment.setHeight("300px");
		mainLayout
				.addComponent(tarDiagnosisComment, "top:140.0px;left:20.0px;");

		return mainLayout;
	}

}
