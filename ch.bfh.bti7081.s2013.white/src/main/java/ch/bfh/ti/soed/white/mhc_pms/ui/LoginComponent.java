package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.controller.NavigationEvent;
import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccessCreator;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;

public class LoginComponent extends PmsComponentController {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label lblTitle;
	@AutoGenerated
	private Button btnLogin;
	private static final long serialVersionUID = -1300264546034541484L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.addLoginButtonClickListener();
	}

	private void addLoginButtonClickListener() {
		this.btnLogin.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 3995263810421104513L;

			@Override
			public void buttonClick(ClickEvent event) {
				LoginComponent.this.startLogin();
			}
		});
	}

	private void startLogin() {
		String userName = this.login();
		
		if (!userName.isEmpty()) {
			PmsDataAccessCreator.setDataAccess(new PmsDataAccess(userName));
			// TODO show login ok message
			Notification.show("Login OK", Notification.Type.HUMANIZED_MESSAGE);
			this.fireComponentChangeEvent(NavigationEvent.LOGIN);
		} else {
			Notification.show("Login fehlgeschlagen!", Notification.Type.HUMANIZED_MESSAGE);
			// TODO show login failed message
		}
	}

	private String login() {
		// TODO Login 
		String userName = "user";
		String password = "";
		
		boolean loginOK = PmsDataAccessCreator.getDataAccess().getPmsUserContainer().checkLogin(userName, password);
		// return user name (login ok) or empty string (login failed)
		return loginOK ? userName : "";
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController#enter(
	 * com.vaadin.navigator.ViewChangeListener.ViewChangeEvent)
	 */
	@Override
	public void enter(ViewChangeEvent event) {
		if (event.getOldView() != null) {
			// TODO Logout
//			PmsDataAccessCreator.getDataAccess().getCurrentUser().getUserName();
			Notification.show("Logout", Notification.Type.HUMANIZED_MESSAGE);
		} 
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// btnLogin
		btnLogin = new Button();
		btnLogin.setCaption("Login");
		btnLogin.setImmediate(true);
		btnLogin.setWidth("-1px");
		btnLogin.setHeight("-1px");
		mainLayout.addComponent(btnLogin, "top:80.0px;left:20.0px;");
		
		// lblTitle
		lblTitle = new Label();
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Login MHC PMS");
		mainLayout.addComponent(lblTitle, "top:20.0px;left:20.0px;");
		
		return mainLayout;
	}

}
