package ch.bfh.ti.soed.white.mhc_pms.ui;

import ch.bfh.ti.soed.white.mhc_pms.controller.NavigationEvent;
import ch.bfh.ti.soed.white.mhc_pms.controller.NewItemListener;
import ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController;
import ch.bfh.ti.soed.white.mhc_pms.data.PCase;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccess;
import ch.bfh.ti.soed.white.mhc_pms.data.PmsDataAccessCreator;
import ch.bfh.ti.soed.white.mhc_pms.data.enums.KindOfTreatment;
import ch.bfh.ti.soed.white.mhc_pms.data.enums.OrderOfPatient;
import ch.bfh.ti.soed.white.mhc_pms.data.enums.ReanimationStatus;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.util.BeanItem;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;

/**
 * @author Gruppe White, I2p, BFH Bern, <a
 *         href="https://github.com/fabaff/ch.bfh.bti7081.s2013.white"
 *         >Contact</a>
 * @version 0.0.2
 * @since 0.0.1
 * 
 *        UI Class for a editing case details
 */
public class EditCaseInfoComponent extends PmsComponentController implements
		NewItemListener {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Panel panMaster;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Panel pan2;
	@AutoGenerated
	private FormLayout formLayout_2;
	@AutoGenerated
	private TextField txtJudicialStatus;
	@AutoGenerated
	private TextField txtVacation;
	@AutoGenerated
	private TextField txtDegreeOfDanger;
	@AutoGenerated
	private TextField txtAssignment;
	@AutoGenerated
	private TextField txtSanction;
	@AutoGenerated
	private Panel pan1;
	@AutoGenerated
	private FormLayout formLayout_1;
	@AutoGenerated
	private TextField txtGoOutStatus;
	@AutoGenerated
	private ComboBox cmbOrderOfPatient;
	@AutoGenerated
	private TextField txtSuicidalTendency;
	@AutoGenerated
	private ComboBox cmbKindOfTreatment;
	@AutoGenerated
	private ComboBox cmbReanimationStatus;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnSave;

	private class SaveButtonListener implements Button.ClickListener {
		private static final long serialVersionUID = 7137875461203747513L;

		@Override
		public void buttonClick(ClickEvent event) {
			try {
				EditCaseInfoComponent.this.fieldGroup.commit();
				PCase pCaseItem = EditCaseInfoComponent.this.newCaseItem
						.getBean();

				if (EditCaseInfoComponent.this.isNewCase) {
					pCaseItem.closeCase();
					EditCaseInfoComponent.this.pmsContainers
							.getPCaseContainer().addEntity(pCaseItem);

					pCaseItem = EditCaseInfoComponent.this.newCaseItem
							.getBean();
					pCaseItem.openCase();
				}

				EditCaseInfoComponent.this.pmsContainers.getPCaseContainer()
						.addEntity(pCaseItem);
				EditCaseInfoComponent.this.fireUIActivationEvent(true);
				EditCaseInfoComponent.this
						.fireComponentChangeEvent(NavigationEvent.PCASE_BACK);
				EditCaseInfoComponent.this.firePCaseItemChangeEvent();
				EditCaseInfoComponent.this.setNewItem(false);

				// TODO adjusted text: new /edit
				Notification.show("Geänderter Fall gespeichert",
						Notification.Type.HUMANIZED_MESSAGE);
			} catch (CommitException e) {
				// TODO Exception Handling
				EditCaseInfoComponent.this
						.getUI()
						.addWindow(
								new Window(
										"Beim Speichern des Falls ist ein Fehler aufgetreten!"));
			}
		}

	}

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 7804702033977054145L;

	private PmsDataAccess pmsContainers;

	private BeanFieldGroup<PCase> fieldGroup;

	private BeanItem<PCase> newCaseItem;

	private boolean isNewCase;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public EditCaseInfoComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		this.pmsContainers = PmsDataAccessCreator.getDataAccess();
		this.pmsContainers.getPCaseContainer().refresh();
		this.fieldGroup = new BeanFieldGroup<PCase>(PCase.class);
		this.isNewCase = false;

		this.initComboBoxes();
		this.bindFields();
		this.setComboBoxDefaultValues();
		this.btnSave.addClickListener(new SaveButtonListener());
		this.addBtnCancelListener();

		// TODO ComboBoxes not editable
		// TODO Neuer Fall: Werte aus bestehendem Fall übernehmen
		// TODO wenn neuer Patient hinzugefügt -> Default Werte für Fallinfo
		// automatisch hinzufügen
	}

	private void setComboBoxDefaultValues() {
		this.cmbKindOfTreatment.setValue(KindOfTreatment.INPATIENT);
		this.cmbOrderOfPatient.setValue(OrderOfPatient.NO);
		this.cmbReanimationStatus.setValue(ReanimationStatus.YES);
	}

	private void addBtnCancelListener() {
		this.btnCancel.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				EditCaseInfoComponent.this.fieldGroup.discard();
				EditCaseInfoComponent.this.fireUIActivationEvent(true);
				EditCaseInfoComponent.this
						.fireComponentChangeEvent(NavigationEvent.PCASE_BACK);
				EditCaseInfoComponent.this.setNewItem(false);
			}
		});
	}

	private void initComboBoxes() {
		this.cmbKindOfTreatment.addItem(KindOfTreatment.INPATIENT);
		this.cmbKindOfTreatment.addItem(KindOfTreatment.PART_INPATIENT);
		this.cmbKindOfTreatment.addItem(KindOfTreatment.AMBULANT);

		this.cmbOrderOfPatient.addItem(OrderOfPatient.NO);
		this.cmbOrderOfPatient.addItem(OrderOfPatient.YES);

		this.cmbReanimationStatus.addItem(ReanimationStatus.YES);
		this.cmbReanimationStatus.addItem(ReanimationStatus.LIMITED);
		this.cmbReanimationStatus.addItem(ReanimationStatus.NO);
	}

	private void bindFields() {
		PCase entityItem = this.pmsContainers.getPCaseContainer()
				.getCurrentItem();

		if (entityItem != null) {
			this.newCaseItem = new BeanItem<PCase>(entityItem);

			this.fieldGroup.setItemDataSource(this.newCaseItem);
			this.fieldGroup
					.bind(this.cmbReanimationStatus, "reanimationStatus");
			this.fieldGroup.bind(this.cmbKindOfTreatment, "kindOfTreatment");
			this.fieldGroup.bind(this.cmbOrderOfPatient, "orderOfPatient");
			this.fieldGroup.bind(this.txtAssignment, "assignment");
			this.fieldGroup.bind(this.txtDegreeOfDanger, "degreeOfDanger");
			this.fieldGroup.bind(this.txtGoOutStatus, "goOutStatus");
			this.fieldGroup.bind(this.txtJudicialStatus, "judicialStatus");
			this.fieldGroup.bind(this.txtSanction, "sanction");
			this.fieldGroup.bind(this.txtSuicidalTendency, "suicidalTendency");
			this.fieldGroup.bind(this.txtVacation, "vacation");
		} else {
			this.newCaseItem = new BeanItem<PCase>(new PCase(
					this.pmsContainers.getCurrentUser()));
			this.fieldGroup.setItemDataSource(this.newCaseItem);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * ch.bfh.ti.soed.white.mhc_pms.controller.PmsComponentController#enter(
	 * com.vaadin.navigator.ViewChangeListener.ViewChangeEvent)
	 */
	@Override
	public void enter(ViewChangeEvent event) {
		this.bindFields();

		if (this.isNewCase) {
			this.setComboBoxDefaultValues();
		}
	}

	@Override
	public void setNewItem(boolean value) {
		this.isNewCase = value;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// btnSave
		btnSave = new Button();
		btnSave.setCaption("Speichern");
		btnSave.setImmediate(true);
		btnSave.setWidth("100px");
		btnSave.setHeight("-1px");
		mainLayout.addComponent(btnSave, "top:20.0px;left:20.0px;");

		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Abbrechen");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("-1px");
		btnCancel.setHeight("-1px");
		mainLayout.addComponent(btnCancel, "top:20.0px;left:140.0px;");

		// panMaster
		panMaster = buildPanMaster();
		mainLayout.addComponent(panMaster, "top:60.0px;left:20.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanMaster() {
		// common part: create layout
		panMaster = new Panel();
		panMaster.setImmediate(false);
		panMaster.setWidth("-1px");
		panMaster.setHeight("-1px");

		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		panMaster.setContent(verticalLayout_3);

		return panMaster;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);

		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		verticalLayout_3.addComponent(gridLayout_1);

		return verticalLayout_3;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("-1px");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(2);

		// pan1
		pan1 = buildPan1();
		gridLayout_1.addComponent(pan1, 0, 0);

		// pan2
		pan2 = buildPan2();
		gridLayout_1.addComponent(pan2, 1, 0);

		return gridLayout_1;
	}

	@AutoGenerated
	private Panel buildPan1() {
		// common part: create layout
		pan1 = new Panel();
		pan1.setImmediate(false);
		pan1.setWidth("-1px");
		pan1.setHeight("-1px");

		// formLayout_1
		formLayout_1 = buildFormLayout_1();
		pan1.setContent(formLayout_1);

		return pan1;
	}

	@AutoGenerated
	private FormLayout buildFormLayout_1() {
		// common part: create layout
		formLayout_1 = new FormLayout();
		formLayout_1.setImmediate(false);
		formLayout_1.setWidth("320px");
		formLayout_1.setHeight("-1px");
		formLayout_1.setMargin(true);
		formLayout_1.setSpacing(true);

		// cmbReanimationStatus
		cmbReanimationStatus = new ComboBox();
		cmbReanimationStatus.setCaption("Reanimationsstatus: ");
		cmbReanimationStatus.setImmediate(false);
		cmbReanimationStatus.setWidth("-1px");
		cmbReanimationStatus.setHeight("-1px");
		formLayout_1.addComponent(cmbReanimationStatus);

		// cmbKindOfTreatment
		cmbKindOfTreatment = new ComboBox();
		cmbKindOfTreatment.setCaption("Behandlungsart: ");
		cmbKindOfTreatment.setImmediate(false);
		cmbKindOfTreatment.setWidth("-1px");
		cmbKindOfTreatment.setHeight("-1px");
		formLayout_1.addComponent(cmbKindOfTreatment);

		// txtSuicidalTendency
		txtSuicidalTendency = new TextField();
		txtSuicidalTendency.setCaption("Suizidalität: ");
		txtSuicidalTendency.setImmediate(false);
		txtSuicidalTendency.setWidth("-1px");
		txtSuicidalTendency.setHeight("-1px");
		formLayout_1.addComponent(txtSuicidalTendency);

		// cmbOrderOfPatient
		cmbOrderOfPatient = new ComboBox();
		cmbOrderOfPatient.setCaption("Patientenverfügung: ");
		cmbOrderOfPatient.setImmediate(false);
		cmbOrderOfPatient.setWidth("-1px");
		cmbOrderOfPatient.setHeight("-1px");
		formLayout_1.addComponent(cmbOrderOfPatient);

		// txtGoOutStatus
		txtGoOutStatus = new TextField();
		txtGoOutStatus.setCaption("Ausgang: ");
		txtGoOutStatus.setImmediate(false);
		txtGoOutStatus.setWidth("-1px");
		txtGoOutStatus.setHeight("-1px");
		formLayout_1.addComponent(txtGoOutStatus);

		return formLayout_1;
	}

	@AutoGenerated
	private Panel buildPan2() {
		// common part: create layout
		pan2 = new Panel();
		pan2.setImmediate(false);
		pan2.setWidth("-1px");
		pan2.setHeight("-1px");

		// formLayout_2
		formLayout_2 = buildFormLayout_2();
		pan2.setContent(formLayout_2);

		return pan2;
	}

	@AutoGenerated
	private FormLayout buildFormLayout_2() {
		// common part: create layout
		formLayout_2 = new FormLayout();
		formLayout_2.setImmediate(false);
		formLayout_2.setWidth("320px");
		formLayout_2.setHeight("-1px");
		formLayout_2.setMargin(true);
		formLayout_2.setSpacing(true);

		// txtSanction
		txtSanction = new TextField();
		txtSanction.setCaption("Zwangsmassnahmen: ");
		txtSanction.setImmediate(false);
		txtSanction.setWidth("-1px");
		txtSanction.setHeight("-1px");
		formLayout_2.addComponent(txtSanction);

		// txtAssignment
		txtAssignment = new TextField();
		txtAssignment.setCaption("Zuweiser: ");
		txtAssignment.setImmediate(false);
		txtAssignment.setWidth("-1px");
		txtAssignment.setHeight("-1px");
		formLayout_2.addComponent(txtAssignment);

		// txtDegreeOfDanger
		txtDegreeOfDanger = new TextField();
		txtDegreeOfDanger.setCaption("Fremdgefährtung: ");
		txtDegreeOfDanger.setImmediate(false);
		txtDegreeOfDanger.setWidth("-1px");
		txtDegreeOfDanger.setHeight("-1px");
		formLayout_2.addComponent(txtDegreeOfDanger);

		// txtVacation
		txtVacation = new TextField();
		txtVacation.setCaption("Urlaub: ");
		txtVacation.setImmediate(false);
		txtVacation.setWidth("-1px");
		txtVacation.setHeight("-1px");
		formLayout_2.addComponent(txtVacation);

		// txtJudicialStatus
		txtJudicialStatus = new TextField();
		txtJudicialStatus.setCaption("Juristischer Status: ");
		txtJudicialStatus.setImmediate(false);
		txtJudicialStatus.setWidth("-1px");
		txtJudicialStatus.setHeight("-1px");
		formLayout_2.addComponent(txtJudicialStatus);

		return formLayout_2;
	}

}
